version: 2

defaults: &defaults
  docker:
    - image: docker:17.05.0-ce-git

jobs:
  build_toolchain:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build image for toolchain
          command: |
            sha1=`git log --format=format:%H -1 toolchain/`
            $( docker pull pgrandin/rpi0-buildroot:${sha1} && 
               docker tag pgrandin/rpi0-buildroot:${sha1} pgrandin/rpi0-buildroot:toolchain ) ||
            docker build -t pgrandin/rpi0-buildroot:toolchain toolchain
          no_output_timeout: 1200
      - run:
          name: Push to docker
          command: |
            sha1=`git log --format=format:%H -1 toolchain/`
            docker login -e="$DOCKER_EMAIL" -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
            docker tag pgrandin/rpi0-buildroot:toolchain pgrandin/rpi0-buildroot:${sha1}
            docker push pgrandin/rpi0-buildroot:toolchain
            docker push pgrandin/rpi0-buildroot:${sha1}
      - store_artifacts:
          path: /usr/local/share/buildroot-2017.02.3/output/images-toolchain

  build_graphics_gtk:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build image with GTK graphics driver
          command: |
            sha1=`git log --format=format:%H -1 graphics-gtk/`
            cp toolchain/rpi0-glibc_defconfig graphics-gtk/
            cat graphics-gtk/navit-gtk_defconfig >> graphics-gtk/rpi0-glibc_defconfig
            mv graphics-gtk/rpi0-glibc_defconfig graphics-gtk/navit-gtk_defconfig
            $( docker pull pgrandin/rpi0-buildroot:${sha1} &&
               docker tag pgrandin/rpi0-buildroot:${sha1} pgrandin/rpi0-buildroot:graphics-gtk ) ||
            docker build -t pgrandin/rpi0-buildroot:graphics-gtk graphics-gtk
          no_output_timeout: 1200
      - run:
          name: Push to docker
          command: |
            sha1=`git log --format=format:%H -1 graphics-gtk/`
            docker login -e="$DOCKER_EMAIL" -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
            docker tag pgrandin/rpi0-buildroot:graphics-gtk pgrandin/rpi0-buildroot:${sha1}
            docker push pgrandin/rpi0-buildroot:graphics-gtk
            docker push pgrandin/rpi0-buildroot:${sha1}
      - store_artifacts:
          path: /usr/local/share/buildroot-2017.02.3/output/images-graphics-gtk2

  build_graphics_qt5:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build image with QT5 graphics driver
          command: |
            sha1=`git log --format=format:%H -1 graphics-qt5/`
            cp toolchain/rpi0-glibc_defconfig graphics-qt5/
            cat graphics-qt5/navit-qt5_defconfig >> graphics-qt5/rpi0-glibc_defconfig
            mv graphics-qt5/rpi0-glibc_defconfig graphics-qt5/navit-qt5_defconfig
            $( docker pull pgrandin/rpi0-buildroot:${sha1} &&
               docker tag pgrandin/rpi0-buildroot:${sha1} pgrandin/rpi0-buildroot:graphics-qt5 ) ||
            docker build -t pgrandin/rpi0-buildroot:graphics-qt5 graphics-qt5
          no_output_timeout: 1200
      - run:
          name: Push to docker
          command: |
            sha1=`git log --format=format:%H -1 graphics-qt5/`
            docker login -e="$DOCKER_EMAIL" -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
            docker tag pgrandin/rpi0-buildroot:graphics-qt5 pgrandin/rpi0-buildroot:${sha1}
            docker push pgrandin/rpi0-buildroot:graphics-qt5
            docker push pgrandin/rpi0-buildroot:${sha1}
      - store_artifacts:
          path: /usr/local/share/buildroot-2017.02.3/output/images-graphics-qt5

workflows:
  version: 2
  build_everything:
    jobs:
      - build_toolchain
      - build_graphics_gtk:
          requires:
            - build_toolchain
      - build_graphics_qt5:
          requires:
            - build_toolchain
